{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["href","loader","enqueue","React","createContext","activeStyles","fontWeight","backgroundImage","ListLink","props","style","display","marginRight","to","textShadow","activeStyle","children","margin","maxWidth","padding","marginBottom","listStyle","float","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"6FAAA,4CAGe,4BACb,kBAAC,IAAD,KACE,wCACA,wCACA,kGACuE,IACrE,6BAFF,gCAIA,oIAGE,uBAAGA,KAAK,gCAAR,QAHF,oIAOA,2IAIA,4BACE,4BACE,uBAAGA,KAAK,2BAAR,cADF,mKAKA,4BACE,uBAAGA,KAAK,yBAAR,gCADF,oIAKA,2JAKF,6BACA,oCACA,yCACA,8YAKA,2CACA,6CACiB,uBAAGA,KAAK,6BAAR,SADjB,mKAIY,KAEZ,yDACA,gfASA,iWAQA,+CACA,0kBAUA,8X,sGCpEqBC,QAAOC,QAELC,IAAMC,cAAc,ICb/C,IAAMC,EAAe,CAEnBC,WAAY,OACZC,gBAAiB,QAGbC,EAAW,SAACC,GAAD,OACf,wBAAIC,MAAO,CAAEC,QAAQ,eAAiBC,YAAY,SAChD,kBAAC,IAAD,CACEC,GAAIJ,EAAMI,GACVH,MAAO,CAAEI,WAAY,QACrBC,YAAaV,GAEZI,EAAMO,YAKE,oBAAGA,EAAH,EAAGA,SAAH,OACb,yBAAKN,MAAO,CAAEO,OAAO,YAAcC,SAAU,IAAKC,QAAQ,WACxD,4BAAQT,MAAO,CAAEU,aAAa,WAC5B,kBAAC,IAAD,CAAMP,GAAG,IAAIH,MAAO,CAAEI,WAAW,OAASP,gBAAgB,SACxD,wBAAIG,MAAO,CAAEC,QAAQ,WAArB,qBAEF,wBAAID,MAAO,CAAEW,UAAU,OAASC,MAAM,UACpC,kBAAC,EAAD,CAAUT,GAAG,KAAb,QACA,kBAAC,EAAD,CAAUA,GAAG,WAAb,SACA,kBAAC,EAAD,CAAUA,GAAG,aAAb,aAGHG,EAED,6BACA,iE,qBCpCJ,IAAsBO,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGE3B,IAAM4B,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-about-js-90ec0b235893a07f5304.js","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <title>About</title>\r\n    <h1>About me</h1>\r\n    <p>\r\n      I'm a recent graduate from Oregon State University, with a BS in CS.{\" \"}\r\n      <br /> I graduated with a 3.5 GPA.\r\n    </p>\r\n    <p>\r\n      While attending OSU I was a part-time student developer at The Center for\r\n      Applied Systems & Software (\r\n      <a href=\"http://cass.oregonstate.edu/\">CASS</a>). Working here laid a\r\n      solid foundation for me to improve not only developer skills, but working\r\n      in Agile teams under deadlines.\r\n    </p>\r\n    <p>\r\n      During my 2 years of employment, I worked on a multitude of projects using\r\n      an abundance of tools, including:\r\n    </p>\r\n    <ul>\r\n      <li>\r\n        <a href=\"https://streamwebs.org/\">Streamwebs</a> : Student Stewardship\r\n        program website designed for K-12 classrooms to track and upload data\r\n        about streams they visit. Django frontend with PostgreSQL backend.\r\n      </li>\r\n      <li>\r\n        <a href=\"https://lf-itx.now.sh\">Linux Foundation ITX Project</a> : React\r\n        Site with Auth0 authentication used internally by the Linux Foundation\r\n        to manage their Domains, Groups, Users and more.\r\n      </li>\r\n      <li>\r\n        Oregon Department of Environmental Quality : The last project I was on\r\n        before I graduated. .NET-based database management.\r\n      </li>\r\n    </ul>\r\n    <hr />\r\n    <h1>Jobs</h1>\r\n    <h2>Intel Co.</h2>\r\n    <p>\r\n      I have been working fully remote for Intel during the pandemic, as an Automation and Validation Engineer.\r\n      While working here I have gained a ton of skills doing test automation for UI, and manual UI validation for releases.\r\n      This job has given me the validation mindset, so that I am able to develop with validation in mind. Love working here and my team is awesome :)\r\n      </p>\r\n    <h1>Internships</h1>\r\n    <p>\r\n      I went through <a href=\"https://www.mecopinc.org/\">MECOP</a> while at\r\n      Oregon State, and landed two six-month internships. This extended my time\r\n      at school slightly, but gave me an extra year of experience in the\r\n      industry.{\" \"}\r\n    </p>\r\n    <h2>Portland General Electric</h2>\r\n    <p>\r\n      At PGE I first worked on the Business Intelligence team doing Data\r\n      Warehousing, and became familiar with the ETL procedure. I had the\r\n      opportunity to improve the ETL runtime of their outage tracker, bringing\r\n      it's overall runtime from 15 to about 3 minutes. This allowed customers to\r\n      see updates to their outages closer to realtime. In addition, I made\r\n      dashboards to track usages of internal tools to provide insight on which\r\n      tools should be focused for improvements.\r\n    </p>\r\n    <p>\r\n      For the second half of my time spent at PGE, I worked on a team of 10\r\n      other interns, led by our DevOps manager to work on a proof-of-concept of\r\n      provisioning virtual machines through numerous cloud providers. Using\r\n      Packer and Terraform, we provisioned VMs on Amazon Web Services, Microsoft\r\n      Azure, and Google Cloud Platform.\r\n    </p>\r\n\r\n    <h2>Mentor Graphics</h2>\r\n    <p>\r\n      Mentor Graphics gave me the wonderful opportunity to work as a QA Intern\r\n      on the Calibre team. I was continually improving their nightly automated\r\n      testing suite, to run thousands of unit and regression tests. Jenkins was\r\n      used to handle these time-sensitive tests, which needed to be viewed by\r\n      standup each morning. Not only were the tests reported, but the log files\r\n      had to be collated so the QA developers could annotate them. This gave me\r\n      solid skills in Bash, and I also had to decipher Perl to figure out\r\n      exactly how some of the reports were generated.\r\n    </p>\r\n    <p>\r\n      In parallel with testing, I was put on a team with another Intern to\r\n      create a validation tool for their migration to JIRA, from their own\r\n      internal issue-tracking system. We were tasked with creating a Python\r\n      program to query REST endpoints and compare against custom fields to\r\n      ensure a smooth transition of over twenty-five thousand issues to JIRA.\r\n    </p>\r\n  </Layout>\r\n);\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst activeStyles = {\r\n  // color: \"blue\",\r\n  fontWeight: \"bold\",\r\n  backgroundImage: \"none\",\r\n};\r\n\r\nconst ListLink = (props) => (\r\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\r\n    <Link\r\n      to={props.to}\r\n      style={{ textShadow: \"none\" }}\r\n      activeStyle={activeStyles}\r\n    >\r\n      {props.children}\r\n    </Link>\r\n  </li>\r\n);\r\n\r\nexport default ({ children }) => (\r\n  <div style={{ margin: `3rem auto`, maxWidth: 700, padding: `0 1rem` }}>\r\n    <header style={{ marginBottom: `1.5rem` }}>\r\n      <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\r\n        <h3 style={{ display: `inline` }}>bailey singleton</h3>\r\n      </Link>\r\n      <ul style={{ listStyle: `none`, float: `right` }}>\r\n        <ListLink to=\"/\">Home</ListLink>\r\n        <ListLink to=\"/about/\">About</ListLink>\r\n        <ListLink to=\"/contact/\">Contact</ListLink>\r\n      </ul>\r\n    </header>\r\n    {children}\r\n\r\n    <hr />\r\n    <div>Last updated April 19th, 2022</div>\r\n  </div>\r\n);\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}